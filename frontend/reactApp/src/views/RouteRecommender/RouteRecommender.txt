// const handleSubmit = () => {
  //   // if (destination) {
  //   //   setDestination(destRef.current.value);
  //   // }
  //   // setDestination({ lat: 23.539840749030184, lng: 87.30470526143955 });
  // };

  // const handleSubmit = () => {
  //   let lat, lng, placeId;
  //   new window.google.maps.Geocoder().geocode(
  //     { address: `${destRef.current.value}` },
  //     function (results, status) {
  //       if (status === window.google.maps.GeocoderStatus.OK) {
  //         placeId = results[0].place_id;
  //         createGoogleMap(results[0].geometry.location);
  //         lat = results[0].geometry.location.lat();
  //         lng = results[0].geometry.location.lng();
  //         new window.google.maps.Marker({
  //           position: { lat, lng },
  //           map: googleMap,
  //           animation: window.google.maps.Animation.DROP,
  //           title: `${destRef.current.value}`,
  //         });
  //         // setGoogleMapInfo({ ...GoogleMapInfo, lat, lng, placeId, isLoading: false, googleMap });
  //         setDestination({ lat, lng });
  //       } else {
  //         alert(
  //           "Geocode was not successful for the following reason: " + status
  //         );
  //       }
  //     }
  //   );
  // };


    ---- using getLatLng file created ----
  // getLatLng
    //   .getLatLon(
    //     destRef.current.value,
    //     process.env.REACT_APP_GOOGLE_MAPS_API_KEY
    //   )
    //   .then((response) => {
    //     //console.log(response.data)
    //     if (response && response.data) {
    //       console.log(response, "response");
    //       if (response.data.results && response.data.results.length) {
    //         const lat = response.data.results[0].geometry.location.lat;
    //         const lng = response.data.results[0].geometry.location.lng;
    //         //console.log(lat, lon);
    //         setDestination({ lat, lng });
    //       } else {
    //         alert("Failed in success!");
    //       }
    //     }
    //   })
    //   .catch(function (error) {
    //     alert("Failed!");
    //   });


    ---- Grids in maps ----
    {geodata.map((point) => <Rectangle
                bounds={{
                  north: 23.549872143205175,
                  east: 87.27976334284111,
                  south: 23.555812505690376,
                  west: 87.2740985174704,
                }}
                options={{
                  strokeColor: colors[point.color],
                  strokeOpacity: 0.8,
                  strokeWeight: 2,
                  fillColor: colors[point.color],
                  fillOpacity: 0.35,
                }}
              />)}


    ----  Routes in maps ----
    {destination && (
                <DirectionsService
                  // required
                  options={{
                    destination,
                    origin: currentpos,
                    travelMode: "WALKING",
                  }}
                  // required
                  callback={directionsCallback}
                  // optional
                  onLoad={(directionsService) => {
                    console.log(
                      "DirectionsService onLoad directionsService: ",
                      directionsService
                    );
                  }}
                  // optional
                  onUnmount={(directionsService) => {
                    console.log(
                      "DirectionsService onUnmount directionsService: ",
                      directionsService
                    );
                  }}
                />
              )}
              {destination && (
                <DirectionsRenderer
                  // required
                  options={{
                    directions: response,
                  }}
                  // optional
                  onLoad={(directionsRenderer) => {
                    console.log(
                      "DirectionsRenderer onLoad directionsRenderer: ",
                      directionsRenderer
                    );
                  }}
                  // optional
                  onUnmount={(directionsRenderer) => {
                    console.log(
                      "DirectionsRenderer onUnmount directionsRenderer: ",
                      directionsRenderer
                    );
                  }}
                />
              )} 


    ---- Icon Markers ----
    // icon={{
                //   url: "/logo.svg",
                //   scaledSize: new window.google.maps.Size(50, 50),
                //   origin: new window.google.maps.Point(0, 0),
                //   anchor: new window.google.maps.Point(25, 25),
                // }}    


    ---- Live Location Tracking ---
        let watchID;
        useEffect(() => {
          navigator.geolocation.getCurrentPosition((position) => {
            console.log("moved in current");
            setCurrentpos({
              lat: position.coords.latitude,
              lng: position.coords.longitude,
            });
          });

          const watchID = navigator.geolocation.watchPosition((position) => {
            console.log("moved in watch", {
              lat: position.coords.latitude,
              lng: position.coords.longitude,
            });
            setCurrentpos({
              lat: position.coords.latitude,
              lng: position.coords.longitude,
            }),
              (error) => alert(JSON.stringify(error)),
              {
                enableHighAccuracy: true,
                timeout: 20000,
                maximumAge: 0,
                // distanceFilter: 100,
              };
          });
        }, []);   


    ---- directionsCallback function ----
          const directionsCallback = (res) => {
          console.log(res, "res in directionsCallback");

          if (res !== null) {
            console.log(res, "directionsCallback");
            if (res.status === "OK") {
              setResponse(res);
            } else {
              console.log("response: ", res);
            }
          }
        };                   